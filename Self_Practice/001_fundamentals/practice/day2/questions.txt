https://github.com/Diwakarsingh052/genspark/blob/main/questions/day-2.txt

q1. Create a stringops package with three files. The package should export one function that utilizes internal (unexported) functions.
    Files in stringops Package:
    File 1: strings.go
    Exported Function: ReverseAndUppercase(s1, s2 string) string
    File 2: upper.go
    Internal Function: toUpperCase(s string) string
    File 3: reverse.go
    Internal Function: reverseString(s string) string


q2.     second-proj-day-2/
        ├── main.go
        ├── go.mod
        ├── auth/
        │   └── auth.go
        └── user/
            └── user.go
    In auth package create two functions
    1. Authenticate
    Authenticate function simply prints a message, authenticating user
    2. Name
    This function prints the Name of the user.
    Note:- to print the name of the user,
    use the user package to know who is the current user

    In user package create one global variable, and one func named as AddToDb
    1. AddToDb
    This function accepts database name as string
    It calls the Authenticate function from auth package
    At last it prints a msg, Adding to db DatabaseName [var which was accepted in the parameter]

    Global Variable
    1. CurrentUser = "any name here" // this would be fetched by auth package

    Note:- Q2 should not work, it should give some import cycle issues, it is intended

    **How to solve the import cycle**
    Extract the common piece of functionality in a separate package
    Import the new package where functionality is needed
    ****************************************************

q3. create two files in the package main as shown below

     third-proj-day-2/
        ├──cmd/
        │  └── main.go
        │  └──setup.go
        ├── auth/
        │  └── auth.go (it has one function which prints authenticating user)
        ├── go.mod

     ** Use go run to run this project **
     To run the project
     cd cmd
     go run . or go run *.go

     setup.go and main.go both belong to package main
     Setup.go -> print some setup messages
     main.go -> call setup function, call auth.Authenticate, and print "end of the main"